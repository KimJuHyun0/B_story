
##### 깃,  깃허브 사용 흐름


git remote : github에 리파지토리 생성


git clone : 깃허브의 리파지토리를 복사하여 로컬에 붙이기. (한 번만 하는 것, 새로 만들 때)

git pull (기존꺼 있으니 변화된 것을 땡겨온다.)



## 화면에 뜨는 메세지를 이해하면서 사용하자!






#### Scalar 다시 정리

스칼라(값) -> 일반 변수

데이터 타입(Data Type) :
숫자,문자,논리 => 기본 데이터 타입
NULL: 없다.
NA   : 결측치(읽을 수 없다.)
NaN : 계산 불가


1차원 배열(동일 자료형 집합)-> vector		[스칼라를 여러 개 저장]
1차원 배열(다른 자료형 집합)-> List		[사용자 정의 자료형]

## 행렬
2차원 배열(행/열의 집합)->	Matrix		[동일 자료형 집합]
			Data Prame	[다른 자료형 집합]   @많이 씀.

열-> 변수(variable), 특성(Feature)=머신러닝에 많이 표현  [ 열은 *****중요]
행-> 관측치(Observation), Data

셀(sell) : 행과 열이 만나는 지점 (몇 행 몇 열)

ex) 4x3 Matrix
   행  열 


열 우선 방식: 데이터를 채울 때 열 우선 채움 ( R이 이런 방식 디폴트, 열우선은 변수 중심으로 보겠다.)

행 우선 방식: 행을 우선으로 채움


*반드시 행,열 다 채울 데이터가 있어야 한다.



############


#### Data Frame

2차원 구조, 동일/다른 자료형의 행/열 집합.
변수(열)은 동일 자료형	

한 변수 내용 돌일
관측치는 다를 수있음.



CSV (Comma Seperator Value)

TSV (Tab Seperator Value)


=> Text File - ASCII (메모장 열리면)
Binary File - 이진수 (메모장 안 열리면)
   └ Excel


